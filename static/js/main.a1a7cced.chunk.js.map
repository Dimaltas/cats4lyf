{"version":3,"sources":["components/Basket.js","App.js","index.js"],"names":["App","React","useState","itemCount","setItemCount","Badge","color","badgeContent","ButtonGroup","Button","id","onClick","fontSize","Cat","sale","cat","setCat","randomPrice","Math","floor","random","useEffect","className","map","img","index","src","url","setSale","loading","setLoading","error","message","setError","getter","a","fetch","response","status","Error","json","data","Home","About","User","Checkout","to","path","ReactDOM","render","document","getElementById"],"mappings":"+RAuCe,SAASA,IACxB,MAAkCC,IAAMC,SAAS,GAAjD,mBAAOC,EAAP,KAAkBC,EAAlB,KAIA,OACA,gCACE,+CACA,gCACE,eAACC,EAAA,EAAD,CAAOC,MAAM,YAAYC,aAAcJ,EAAvC,UACE,cAAC,IAAD,IAAqB,OAEvB,cAACK,EAAA,EAAD,UAQE,eAACC,EAAA,EAAD,CAAQC,GAAG,MACTC,QAAS,WAlBRP,EAAaD,EAAW,IAiB3B,UAKG,IACD,cAAC,IAAD,CAASS,SAAS,qBCtD1B,IA+FMC,EAAM,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACV,EAAqBZ,mBAAS,IAA9B,mBAAOa,EAAP,KAAWC,EAAX,KAIMC,EAAc,WAEhB,OADYC,KAAKC,MAAoB,IAAdD,KAAKE,WAWhC,OANAC,qBAAU,WARNL,EAAOF,KAUT,IACFO,qBAAU,WACNJ,MACF,IACEF,GAGAD,EAIA,qBAAKQ,UAAU,OAAf,SACKP,EAAIQ,KAAI,SAACC,EAAIC,GACd,OACI,gCACA,qBAAiBC,IAAKF,EAAIG,KAAhBF,GACV,6CAAaR,OACb,cAAC,EAAD,YAZD,MA4CAjB,EA7JH,WACR,MAAuBE,mBAAS,IAAhC,mBAAOY,EAAP,KAAYc,EAAZ,KACA,EAA6B1B,oBAAS,GAAtC,mBAAO2B,EAAP,KAAeC,EAAf,KACA,EAAyB5B,mBAAS,CAC9B6B,OAAM,EACNC,QAAQ,KAFZ,mBAAOD,EAAP,KAAaE,EAAb,KAIMC,EAAM,uCAAG,8BAAAC,EAAA,sEAEXL,GAAW,GAFA,SAGYM,MAAM,uDAHlB,UAIY,OADjBC,EAHK,QAICC,OAJD,sBAKL,IAAIC,MAAM,eALL,uBAOQF,EAASG,OAPjB,OAOLC,EAPK,OAQXb,EAAQa,GACRX,GAAW,GATA,kDAWXG,EAAS,CAACF,OAAM,EAAKC,QAAQ,KAAMA,UAXxB,0DAAH,qDAkBZ,GAHAX,qBAAU,WACNa,MACF,KACEpB,GAAQe,EACR,OAAO,4CAEX,GAAGE,EAAMA,MACL,OAAO,6BAAKA,EAAMC,UAEtB,SAASU,IACL,OAAO,oBAAIpB,UAAU,SAAd,kBAGX,SAASqB,IACL,OAAO,oBAAIrB,UAAU,SAAd,mBAGX,SAASsB,IACL,OACA,sBAAKtB,UAAU,OAAf,UACA,oBAAIA,UAAU,SAAd,2BACA,cAAC,EAAD,CAAKR,KAAMA,OAIf,SAAS+B,IACL,OACI,wCAGR,OACI,8BACI,8BACA,cAAC,IAAD,UACR,gCACI,qBAAKvB,UAAU,SAAf,SACA,+BACI,6BACA,cAAC,IAAD,CAAMwB,GAAG,IAAT,oBAEA,6BACA,cAAC,IAAD,CAAMA,GAAG,SAAT,qBAEA,6BACA,cAAC,IAAD,CAAMA,GAAG,QAAT,6BAEA,6BACI,cAAC,IAAD,CAAMA,GAAG,YAAT,2BAIR,eAAC,IAAD,WACA,cAAC,IAAD,CAAOC,KAAK,SAAZ,SACI,cAACJ,EAAD,MAEJ,cAAC,IAAD,CAAOI,KAAK,QAAZ,SACI,cAACH,EAAD,MAEJ,cAAC,IAAD,CAAOG,KAAK,YAAZ,SACI,cAACF,EAAD,MAEJ,cAAC,IAAD,CAAOE,KAAK,IAAZ,SACI,cAACL,EAAD,mBC1FZM,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.a1a7cced.chunk.js","sourcesContent":["// import {randomPrice} from \"../App\";\r\n// const { useState } = require(\"react\");\r\n\r\n// const Basket = () => {\r\n\r\n//     const [cart, setCart] = useState([])\r\n\r\n//     const addHandler = () =>{\r\n//         randomPrice = [...cart]\r\n//         randomPrice.push(setCart)\r\n//         setCart(randomPrice)\r\n//     }\r\n//     const deleteHandler = (index) =>{\r\n//         let storedCart = [...cart]\r\n//         storedCart.splice(index,1)\r\n//         setCart(storedCart)\r\n//     }\r\n//   return(\r\n//     <div>\r\n//       <h1>Basket</h1>\r\n//       <button type=\"button\" onClick = {addHandler}>+</button>\r\n//       {cart && \r\n//       cart.map((index) =>{\r\n//         return (<div key={index} value = \"item\">\r\n//           <button onClick = {() => deleteHandler(index)}>-</button>\r\n//         </div>)\r\n//       })}\r\n//     </div> )\r\n// }\r\n// export default Basket;\r\n\r\nimport React from \"react\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport RemoveIcon from \"@material-ui/icons/Remove\";\r\n\r\nexport default function App() {\r\nconst [itemCount, setItemCount] = React.useState(0);\r\nconst addHandler = () =>{\r\n         setItemCount(itemCount +1)\r\n     }\r\nreturn (\r\n<div>\r\n  <h4>Add to basket</h4>\r\n  <div>\r\n    <Badge color=\"secondary\" badgeContent={itemCount}>\r\n      <ShoppingCartIcon />{\" \"}\r\n    </Badge>\r\n    <ButtonGroup>\r\n      {/* <Button id=\"delete\"\r\n        onClick={() => {\r\n            setItemCount(Math.max(itemCount - 1, 0));\r\n            }}>\r\n        {\" \"}\r\n        <RemoveIcon fontSize=\"small\" />\r\n      </Button> */}\r\n      <Button id=\"add\"\r\n        onClick={() => {\r\n          addHandler()\r\n        }}\r\n      >\r\n        {\" \"}\r\n        <AddIcon fontSize=\"small\" />\r\n      </Button>\r\n    </ButtonGroup>\r\n  </div>\r\n</div>\r\n);\r\n}","import { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport React from \"react\";\nimport {\nBrowserRouter as Router,\nSwitch,\nRoute,\nLink\n} from \"react-router-dom\";\nimport Basket from \"./components/Basket\";\n\nconst App = () =>{\n    const [sale,setSale] = useState(\"\")\n    const [loading,setLoading] = useState(false)\n    const [error,setError] = useState({\n        error:false,\n        message:\"\"\n    })\n    const getter = async() =>{\n        try{\n        setLoading(true)\n        const response = await fetch(\"https://api.thecatapi.com/v1/images/search?limit=10\")\n        if(response.status !== 200){\n        throw new Error(\"not working\")\n        }\n        const data = await response.json()\n        setSale(data)\n        setLoading(false)\n        }catch (error) {\n        setError({error:true,message:error.message})\n        }\n        \n    }\n    useEffect(()=>{\n        getter()\n    },[])\n    if(!sale || loading){\n        return <h1>loading...</h1>\n    }\n    if(error.error){\n        return <h1>{error.message}</h1>\n    }\n    function Home() {\n        return <h1 className=\"header\">Home</h1>;\n    }\n    \n    function About() {\n        return <h1 className=\"header\">About</h1>;\n    }\n    \n    function User() {\n        return (\n        <div className=\"cats\">\n        <h1 className=\"header\">Cats For Sale</h1>\n        <Cat sale={sale}/>\n    </div>\n    )\n    }\n    function Checkout(){\n        return(\n            <h2>Basket</h2>\n        )\n    }\n    return(\n        <div>\n            <div>\n            <Router>\n    <div>\n        <nav className=\"navbar\">\n        <ul>\n            <li>\n            <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n            <Link to=\"/about\">About</Link>\n            </li>\n            <li>\n            <Link to=\"/User\">Cats for sale</Link>\n            </li>\n            <li>\n                <Link to=\"/checkout\">Basket</Link>\n            </li>\n        </ul>\n        </nav>\n        <Switch>\n        <Route path=\"/about\">\n            <About />\n        </Route>\n        <Route path=\"/User\">\n            <User />\n        </Route>\n        <Route path=\"/checkout\">\n            <Checkout />\n        </Route>\n        <Route path=\"/\">\n            <Home />\n        </Route>\n        </Switch>\n        \n    </div>\n    </Router>\n        </div>\n    </div>\n    )\n}\n\nconst Cat = ({sale}) => {\n    const [cat,setCat] = useState(\"\")\n    const catS=()=>{\n        setCat(sale)\n    }\n    const randomPrice = () =>{\n        let price = Math.floor(Math.random()*200)\n        return(\n            price\n        )\n    }\n    useEffect(()=>{\n        catS()\n    },[])\n    useEffect(()=>{\n        randomPrice()\n    },[])\n    if(!cat){\n        return null\n    }\n    if(!sale){\n        return null\n    }\n    return(\n        <div className=\"catt\">\n            {cat.map((img,index)=>{\n            return( \n                <div>\n                <img key={index} src={img.url}/>\n                <h2>Price: Â£{randomPrice()}</h2>\n                <Basket></Basket>\n                \n                </div>\n            )\n            })} \n        </div>\n    )\n}\n// const Basket = ({storedCart}) => {\n//     const [cart, setCart] = useState([])\n//     const addHandler = () =>{\n//         let storedCart = [...cart]\n//         storedCart.push(setCart)\n//         setCart(storedCart)\n//     }\n//     const deleteHandler = (index) =>{\n//         let storedCart = [...cart]\n//         storedCart.splice(index,1)\n//         setCart(storedCart)\n//     }\n// return(\n//     <div>\n//     <h1>Basket</h1>\n//     <button type=\"button\" onClick = {addHandler}>+</button>\n//     {cart && \n//     cart.map((index) =>{\n//         return (<div key={index} value = \"item\">\n//         <button onClick = {() => deleteHandler(index)}>-</button>\n//         </div>)\n//     })}\n//     </div> )\n// }\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}